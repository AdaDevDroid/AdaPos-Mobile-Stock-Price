"use client";
import { useEffect } from "react";
import { useNetworkStatus } from "./NetworkStatusContext";

export function useAuth() {
  const isOnline = useNetworkStatus()
  useEffect(() => {
    const checkAuth = async () => {
      try {
        if (!isOnline) {
          // üî¥ ‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå ‚Üí ‡πÉ‡∏ä‡πâ Token ‡∏à‡∏≤‡∏Å LocalStorage
          console.log("üî¥ Offline Mode: ‡πÉ‡∏ä‡πâ Token ‡∏à‡∏≤‡∏Å LocalStorage");

          const cachedToken = localStorage.getItem("session_token");
          if (!cachedToken) {
            console.error("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ Token ‡πÉ‡∏ô Cache, Redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login");
            window.location.href = "/";
            return;
          }

          console.log("‚úÖ ‡πÉ‡∏ä‡πâ Token ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å LocalStorage");
          return;
        }

        // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå ‚Üí ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏à‡∏≤‡∏Å Cookie
        const res = await fetch("/api/auth/me", { credentials: "include" });
        const data = await res.json();
        console.log("üì¢ Auth Response:", data); 

        if (!data.authenticated) {
          console.log("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà login, Redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login");
          window.location.href = "/";
        } else {
          console.log("‚úÖ login ‡πÅ‡∏•‡πâ‡∏ß");
        }
      } catch (error) {
        console.error("‚ö†Ô∏è Error ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå:", error);
        window.location.href = "/";
      }
    };

    checkAuth();
  }, []);
}