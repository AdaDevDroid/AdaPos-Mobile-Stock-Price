// ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Workbox
importScripts('https://storage.googleapis.com/workbox-cdn/releases/6.0.2/workbox-sw.js');

const VERSION = "1.0.7"
// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Workbox ‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
if (workbox) {
  console.log('Workbox is loaded üéâ');

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô cache ‡∏°‡∏µ‡∏Å‡∏≤‡∏£ precache ‡πÅ‡∏•‡∏∞ revision ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö VERSION ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  caches.open(workbox.core.cacheName).then((cache) => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô cache ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    cache.match('/').then((response) => {
      if (response) {
        response.text().then((cachedVersion) => {
          console.log('Cached version:', cachedVersion);
          console.log('Cached version New:', VERSION);

          // ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö VERSION ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô cache ‡∏Å‡∏±‡∏ö VERSION ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
          if (cachedVersion !== VERSION) {
            console.warn('Version mismatch, updating cache...');
            // ‡∏•‡∏ö cache ‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô
            cache.delete('/').then(() => {
              // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏ö cache ‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß, ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ VERSION ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
              updateCache(cache);
            });
          } else {
            console.warn('Version matches, no update needed');
          }
        });
      } else {
        console.log('No cached version found, storing current VERSION...');
        // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå cached, ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° VERSION ‡πÉ‡∏´‡∏°‡πà
        updateCache(cache);
      }
    });
  });

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï cache ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≥‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á
  function updateCache() {
    // ‡∏•‡∏ö cache ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô
    clearAllCaches();

    // ‡πÄ‡∏Å‡πá‡∏ö VERSION ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô cache
    caches.open(workbox.core.cacheName).then((cache) => {
      cache.put('/', new Response(VERSION)); // ‡πÄ‡∏Å‡πá‡∏ö VERSION ‡πÉ‡∏´‡∏°‡πà
    });

    // Precache ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
    workbox.precaching.precacheAndRoute([
      { url: '/', revision: VERSION },
      { url: '/login', revision: VERSION },
      { url: '/main', revision: VERSION },
      { url: '/receive', revision: VERSION },
      { url: '/transfer', revision: VERSION },
      { url: '/stock', revision: VERSION },
      { url: '/price-check', revision: VERSION },
      { url: '/icons/icon-192x192.png', revision: VERSION },
      { url: '/icons/icon-512x512.png', revision: VERSION },
    ]);
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö cache ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  function clearAllCaches() {
    caches.keys().then((cacheNames) => {
      cacheNames.forEach((cacheName) => {
        caches.delete(cacheName).then(() => {
          console.log(`Cache ${cacheName} has been deleted.`);
        });
      });
    });
  }

  // ‡πÉ‡∏ä‡πâ Network First ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö API /api/auth/
  workbox.routing.registerRoute(
    ({ url }) => url.pathname.startsWith('/api/auth/'),
    new workbox.strategies.NetworkFirst({
      cacheName: 'my-api-cache-v1',
      plugins: [
        new workbox.expiration.ExpirationPlugin({
          maxEntries: 50, // ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 50 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
          maxAgeSeconds: 7 * 24 * 60 * 60, // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÅ‡∏Ñ‡∏ä 7 ‡∏ß‡∏±‡∏ô
        }),
      ],
    })
  );

  // ‡πÉ‡∏ä‡πâ Stale While Revalidate ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå CSS ‡πÅ‡∏•‡∏∞ JS
  workbox.routing.registerRoute(
    ({ request }) =>
      request.destination === 'script' || request.destination === 'style',
    new workbox.strategies.StaleWhileRevalidate({
      cacheName: 'static-resources',
    })
  );

  // ‡πÉ‡∏ä‡πâ Cache First ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  workbox.routing.registerRoute(
    ({ request }) => request.destination === 'image',
    new workbox.strategies.CacheFirst({
      cacheName: 'image-cache',
      plugins: [
        new workbox.expiration.ExpirationPlugin({
          maxEntries: 100, // ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 100 ‡∏£‡∏π‡∏õ
          maxAgeSeconds: 30 * 24 * 60 * 60, // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÅ‡∏Ñ‡∏ä 30 ‡∏ß‡∏±‡∏ô
        }),
      ],
    })
  );
} else {
  console.log('Workbox failed to load üò¢');
}